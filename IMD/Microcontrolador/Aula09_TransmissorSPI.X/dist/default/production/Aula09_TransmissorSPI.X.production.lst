

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Sep 15 21:51:48 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F45K20 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     
    51                           	psect	nvCOMRAM
    52  000001                     __pnvCOMRAM:
    53                           	opt callstack 0
    54  000001                     _LED_Display:
    55                           	opt callstack 0
    56  000001                     	ds	1
    57  0000                     _SSPBUF	set	4041
    58  0000                     _PORTD	set	3971
    59  0000                     _RCONbits	set	4048
    60  0000                     _INTCON2bits	set	4081
    61  0000                     _INTCONbits	set	4082
    62  0000                     _SSPSTATbits	set	4039
    63  0000                     _TRISCbits	set	3988
    64  0000                     _SSPCON1bits	set	4038
    65  0000                     _TRISB	set	3987
    66  0000                     _TRISD	set	3989
    67                           
    68                           ; #config settings
    69  0000                     
    70                           	psect	cinit
    71  000086                     __pcinit:
    72                           	opt callstack 0
    73  000086                     start_initialization:
    74                           	opt callstack 0
    75  000086                     __initialization:
    76                           	opt callstack 0
    77  000086                     end_of_initialization:
    78                           	opt callstack 0
    79  000086                     __end_of__initialization:
    80                           	opt callstack 0
    81  000086  9002               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    82  000088  9202               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    83  00008A  0100               	movlb	0
    84  00008C  EF3B  F000         	goto	_main	;jump to C main() function
    85                           
    86                           	psect	cstackCOMRAM
    87  000000                     __pcstackCOMRAM:
    88                           	opt callstack 0
    89  000000                     
    90                           ; 1 bytes @ 0x0
    91 ;;
    92 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    93 ;;
    94 ;; *************** function _main *****************
    95 ;; Defined at:
    96 ;;		line 66 in file "main_mestre.c"
    97 ;; Parameters:    Size  Location     Type
    98 ;;		None
    99 ;; Auto vars:     Size  Location     Type
   100 ;;		None
   101 ;; Return value:  Size  Location     Type
   102 ;;                  1    wreg      void 
   103 ;; Registers used:
   104 ;;		wreg, status,2, cstack
   105 ;; Tracked objects:
   106 ;;		On entry : 0/0
   107 ;;		On exit  : 0/0
   108 ;;		Unchanged: 0/0
   109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   110 ;;      Params:         0       0       0       0       0       0       0
   111 ;;      Locals:         0       0       0       0       0       0       0
   112 ;;      Temps:          0       0       0       0       0       0       0
   113 ;;      Totals:         0       0       0       0       0       0       0
   114 ;;Total ram usage:        0 bytes
   115 ;; Hardware stack levels required when called:    2
   116 ;; This function calls:
   117 ;;		_UserInit
   118 ;;		_UserProcess
   119 ;; This function is called by:
   120 ;;		Startup code after reset
   121 ;; This function uses a non-reentrant model
   122 ;;
   123                           
   124                           	psect	text0
   125  000076                     __ptext0:
   126                           	opt callstack 0
   127  000076                     _main:
   128                           	opt callstack 29
   129  000076                     
   130                           ;main_mestre.c: 68:  UserInit();
   131  000076  EC23  F000         	call	_UserInit	;wreg free
   132  00007A                     l763:
   133                           
   134                           ;main_mestre.c: 71:   UserProcess();
   135  00007A  EC48  F000         	call	_UserProcess	;wreg free
   136  00007E  EF3D  F000         	goto	l763
   137  000082  EF21  F000         	goto	start
   138  000086                     __end_of_main:
   139                           	opt callstack 0
   140                           
   141 ;; *************** function _UserProcess *****************
   142 ;; Defined at:
   143 ;;		line 179 in file "main_mestre.c"
   144 ;; Parameters:    Size  Location     Type
   145 ;;		None
   146 ;; Auto vars:     Size  Location     Type
   147 ;;		None
   148 ;; Return value:  Size  Location     Type
   149 ;;                  1    wreg      void 
   150 ;; Registers used:
   151 ;;		None
   152 ;; Tracked objects:
   153 ;;		On entry : 0/0
   154 ;;		On exit  : 0/0
   155 ;;		Unchanged: 0/0
   156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   157 ;;      Params:         0       0       0       0       0       0       0
   158 ;;      Locals:         0       0       0       0       0       0       0
   159 ;;      Temps:          0       0       0       0       0       0       0
   160 ;;      Totals:         0       0       0       0       0       0       0
   161 ;;Total ram usage:        0 bytes
   162 ;; Hardware stack levels used:    1
   163 ;; Hardware stack levels required when called:    1
   164 ;; This function calls:
   165 ;;		Nothing
   166 ;; This function is called by:
   167 ;;		_main
   168 ;; This function uses a non-reentrant model
   169 ;;
   170                           
   171                           	psect	text1
   172  000090                     __ptext1:
   173                           	opt callstack 0
   174  000090                     _UserProcess:
   175                           	opt callstack 29
   176  000090                     
   177                           ;main_mestre.c: 180:  PORTD = LED_Display;
   178  000090  C001  FF83         	movff	_LED_Display,3971	;volatile
   179  000094  0012               	return		;funcret
   180  000096                     __end_of_UserProcess:
   181                           	opt callstack 0
   182                           
   183 ;; *************** function _UserInit *****************
   184 ;; Defined at:
   185 ;;		line 89 in file "main_mestre.c"
   186 ;; Parameters:    Size  Location     Type
   187 ;;		None
   188 ;; Auto vars:     Size  Location     Type
   189 ;;		None
   190 ;; Return value:  Size  Location     Type
   191 ;;                  1    wreg      void 
   192 ;; Registers used:
   193 ;;		wreg, status,2
   194 ;; Tracked objects:
   195 ;;		On entry : 0/0
   196 ;;		On exit  : 0/0
   197 ;;		Unchanged: 0/0
   198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   199 ;;      Params:         0       0       0       0       0       0       0
   200 ;;      Locals:         0       0       0       0       0       0       0
   201 ;;      Temps:          0       0       0       0       0       0       0
   202 ;;      Totals:         0       0       0       0       0       0       0
   203 ;;Total ram usage:        0 bytes
   204 ;; Hardware stack levels used:    1
   205 ;; Hardware stack levels required when called:    1
   206 ;; This function calls:
   207 ;;		Nothing
   208 ;; This function is called by:
   209 ;;		_main
   210 ;; This function uses a non-reentrant model
   211 ;;
   212                           
   213                           	psect	text2
   214  000046                     __ptext2:
   215                           	opt callstack 0
   216  000046                     _UserInit:
   217                           	opt callstack 29
   218  000046                     
   219                           ;main_mestre.c: 97:  LED_Display = 0b0001;
   220  000046  0E01               	movlw	1
   221  000048  6E01               	movwf	_LED_Display^0,c
   222                           
   223                           ;main_mestre.c: 106:  TRISD = 0b00000000;
   224  00004A  0E00               	movlw	0
   225  00004C  6E95               	movwf	149,c	;volatile
   226                           
   227                           ;main_mestre.c: 111:  TRISB = 1;
   228  00004E  0E01               	movlw	1
   229  000050  6E93               	movwf	147,c	;volatile
   230  000052                     
   231                           ;main_mestre.c: 136:  SSPCON1bits.SSPM3 = 0;
   232  000052  96C6               	bcf	198,3,c	;volatile
   233  000054                     
   234                           ;main_mestre.c: 137:  SSPCON1bits.SSPM2 = 0;
   235  000054  94C6               	bcf	198,2,c	;volatile
   236  000056                     
   237                           ;main_mestre.c: 138:  SSPCON1bits.SSPM1 = 0;
   238  000056  92C6               	bcf	198,1,c	;volatile
   239  000058                     
   240                           ;main_mestre.c: 139:  SSPCON1bits.SSPM0 = 0;
   241  000058  90C6               	bcf	198,0,c	;volatile
   242  00005A                     
   243                           ;main_mestre.c: 140:  TRISCbits.TRISC3 = 0;
   244  00005A  9694               	bcf	148,3,c	;volatile
   245  00005C                     
   246                           ;main_mestre.c: 141:  TRISCbits.TRISC4 = 1;
   247  00005C  8894               	bsf	148,4,c	;volatile
   248  00005E                     
   249                           ;main_mestre.c: 142:  TRISCbits.TRISC5 = 0;
   250  00005E  9A94               	bcf	148,5,c	;volatile
   251  000060                     
   252                           ;main_mestre.c: 143:  SSPSTATbits.CKE = 0;
   253  000060  9CC7               	bcf	199,6,c	;volatile
   254  000062                     
   255                           ;main_mestre.c: 144:  SSPCON1bits.CKP = 0;
   256  000062  98C6               	bcf	198,4,c	;volatile
   257  000064                     
   258                           ;main_mestre.c: 145:  SSPSTATbits.SMP = 0;
   259  000064  9EC7               	bcf	199,7,c	;volatile
   260  000066                     
   261                           ;main_mestre.c: 146:  SSPCON1bits.SSPEN = 1;
   262  000066  8AC6               	bsf	198,5,c	;volatile
   263  000068                     
   264                           ;main_mestre.c: 164:  INTCONbits.INT0IE = 1;
   265  000068  88F2               	bsf	242,4,c	;volatile
   266  00006A                     
   267                           ;main_mestre.c: 165:     INTCONbits.INT0IF = 0;
   268  00006A  92F2               	bcf	242,1,c	;volatile
   269  00006C                     
   270                           ;main_mestre.c: 166:  INTCON2bits.INTEDG0 = 0;
   271  00006C  9CF1               	bcf	241,6,c	;volatile
   272  00006E                     
   273                           ;main_mestre.c: 167:  INTCON2bits.RBPU = 0;
   274  00006E  9EF1               	bcf	241,7,c	;volatile
   275  000070                     
   276                           ;main_mestre.c: 168:  RCONbits.IPEN = 0;
   277  000070  9ED0               	bcf	208,7,c	;volatile
   278  000072                     
   279                           ;main_mestre.c: 169:     INTCONbits.GIEH = 1;
   280  000072  8EF2               	bsf	242,7,c	;volatile
   281  000074  0012               	return		;funcret
   282  000076                     __end_of_UserInit:
   283                           	opt callstack 0
   284                           
   285 ;; *************** function _InterruptServiceHigh *****************
   286 ;; Defined at:
   287 ;;		line 195 in file "main_mestre.c"
   288 ;; Parameters:    Size  Location     Type
   289 ;;		None
   290 ;; Auto vars:     Size  Location     Type
   291 ;;		None
   292 ;; Return value:  Size  Location     Type
   293 ;;                  1    wreg      void 
   294 ;; Registers used:
   295 ;;		wreg, status,2, status,0
   296 ;; Tracked objects:
   297 ;;		On entry : 0/0
   298 ;;		On exit  : 0/0
   299 ;;		Unchanged: 0/0
   300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   301 ;;      Params:         0       0       0       0       0       0       0
   302 ;;      Locals:         0       0       0       0       0       0       0
   303 ;;      Temps:          0       0       0       0       0       0       0
   304 ;;      Totals:         0       0       0       0       0       0       0
   305 ;;Total ram usage:        0 bytes
   306 ;; Hardware stack levels used:    1
   307 ;; This function calls:
   308 ;;		Nothing
   309 ;; This function is called by:
   310 ;;		Interrupt level 2
   311 ;; This function uses a non-reentrant model
   312 ;;
   313                           
   314                           	psect	intcode
   315  000008                     __pintcode:
   316                           	opt callstack 0
   317  000008                     _InterruptServiceHigh:
   318                           	opt callstack 29
   319                           
   320                           ;incstack = 0
   321  000008  8202               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   322  00000A                     
   323                           ;main_mestre.c: 206:     if (INTCONbits.INT0IF == 1)
   324  00000A  A2F2               	btfss	242,1,c	;volatile
   325  00000C  EF0A  F000         	goto	i2u1_41
   326  000010  EF0C  F000         	goto	i2u1_40
   327  000014                     i2u1_41:
   328  000014  EF1F  F000         	goto	i2l47
   329  000018                     i2u1_40:
   330  000018                     
   331                           ;main_mestre.c: 207:     {;main_mestre.c: 215:         PORTD = 0b10000000;
   332  000018  0E80               	movlw	128
   333  00001A  6E83               	movwf	131,c	;volatile
   334  00001C                     
   335                           ;main_mestre.c: 224:   LED_Display = LED_Display << 1;
   336  00001C  5001               	movf	_LED_Display^0,w,c
   337  00001E  2401               	addwf	_LED_Display^0,w,c
   338  000020  6E01               	movwf	_LED_Display^0,c
   339  000022                     
   340                           ;main_mestre.c: 226:   if(LED_Display == 0b10000){
   341  000022  0E10               	movlw	16
   342  000024  1801               	xorwf	_LED_Display^0,w,c
   343  000026  A4D8               	btfss	status,2,c
   344  000028  EF18  F000         	goto	i2u2_41
   345  00002C  EF1A  F000         	goto	i2u2_40
   346  000030                     i2u2_41:
   347  000030  EF1C  F000         	goto	i2l775
   348  000034                     i2u2_40:
   349  000034                     
   350                           ;main_mestre.c: 227:    LED_Display = 1;
   351  000034  0E01               	movlw	1
   352  000036  6E01               	movwf	_LED_Display^0,c
   353  000038                     i2l775:
   354                           
   355                           ;main_mestre.c: 247:   SSPBUF = LED_Display;
   356  000038  C001  FFC9         	movff	_LED_Display,4041	;volatile
   357  00003C                     
   358                           ;main_mestre.c: 249:         INTCONbits.INT0IF = 0;
   359  00003C  92F2               	bcf	242,1,c	;volatile
   360  00003E                     i2l47:
   361  00003E  9202               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   362  000040  0011               	retfie		f
   363  000042                     __end_of_InterruptServiceHigh:
   364                           	opt callstack 0
   365  0000                     
   366                           	psect	rparam
   367  0000                     
   368                           	psect	temp
   369  000002                     btemp:
   370                           	opt callstack 0
   371  000002                     	ds	1
   372  0000                     int$flags	set	btemp
   373  0000                     wtemp8	set	btemp+1
   374  0000                     ttemp5	set	btemp+1
   375  0000                     ttemp6	set	btemp+4
   376  0000                     ttemp7	set	btemp+8
   377                           tosu	equ	0xFFF
   378                           tosh	equ	0xFFE
   379                           tosl	equ	0xFFD
   380                           stkptr	equ	0xFFC
   381                           pclatu	equ	0xFFB
   382                           pclath	equ	0xFFA
   383                           pcl	equ	0xFF9
   384                           tblptru	equ	0xFF8
   385                           tblptrh	equ	0xFF7
   386                           tblptrl	equ	0xFF6
   387                           tablat	equ	0xFF5
   388                           prodh	equ	0xFF4
   389                           prodl	equ	0xFF3
   390                           indf0	equ	0xFEF
   391                           postinc0	equ	0xFEE
   392                           postdec0	equ	0xFED
   393                           preinc0	equ	0xFEC
   394                           plusw0	equ	0xFEB
   395                           fsr0h	equ	0xFEA
   396                           fsr0l	equ	0xFE9
   397                           wreg	equ	0xFE8
   398                           indf1	equ	0xFE7
   399                           postinc1	equ	0xFE6
   400                           postdec1	equ	0xFE5
   401                           preinc1	equ	0xFE4
   402                           plusw1	equ	0xFE3
   403                           fsr1h	equ	0xFE2
   404                           fsr1l	equ	0xFE1
   405                           bsr	equ	0xFE0
   406                           indf2	equ	0xFDF
   407                           postinc2	equ	0xFDE
   408                           postdec2	equ	0xFDD
   409                           preinc2	equ	0xFDC
   410                           plusw2	equ	0xFDB
   411                           fsr2h	equ	0xFDA
   412                           fsr2l	equ	0xFD9
   413                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       1
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptServiceHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptServiceHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptServiceHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptServiceHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptServiceHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptServiceHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptServiceHigh in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _UserInit
                        _UserProcess
 ---------------------------------------------------------------------------------
 (1) _UserProcess                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UserInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _InterruptServiceHigh                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UserInit
   _UserProcess

 _InterruptServiceHigh (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      0       1       1        1.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       1       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       1      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Sep 15 21:51:48 2020

                  _SSPSTATbits 000FC7                             l40 0094                             l37 0074  
                 __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000                   __CFG_CP2$OFF 000000  
                 __CFG_CP3$OFF 000000                            l731 0058                            l723 0046  
                          l741 0062                            l733 005A                            l725 0052  
                          l751 006C                            l743 0064                            l735 005C  
                          l727 0054                            l753 006E                            l745 0066  
                          l737 005E                            l729 0056                            l761 0076  
                          l755 0070                            l747 0068                            l739 0060  
                          l763 007A                            l757 0072                            l749 006A  
                          l759 0090                   __CFG_CPB$OFF 000000                   __CFG_CPD$OFF 000000  
                 __CFG_BORV$18 000000           _InterruptServiceHigh 0008                   __CFG_LVP$OFF 000000  
                         i2l47 003E                           _main 0076                           btemp 0002  
                         start 0042                  __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000  
                 ___param_bank 000000                          ?_main 0000                          i2l771 0022  
                        i2l773 0034                          i2l765 000A                          i2l775 0038  
                        i2l767 0018                          i2l777 003C                          i2l769 001C  
                        _PORTD 000F83          ?_InterruptServiceHigh 0000                          _TRISB 000F93  
                        _TRISD 000F95                  __CFG_PWRT$OFF 000000                  __CFG_WRT0$OFF 000000  
                __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000  
               __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000  
               __CFG_EBTR2$OFF 000000                 __CFG_EBTR3$OFF 000000                  __CFG_WRTB$OFF 000000  
                __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000                 __CFG_EBTRB$OFF 000000  
               __CFG_BOREN$OFF 000000                          ttemp5 0003                          ttemp6 0006  
                        ttemp7 000A                          status 000FD8                          wtemp8 0003  
              __initialization 0086                   __end_of_main 0086                         ??_main 0000  
                __activetblptr 000000               __end_of_UserInit 0076                 __CFG_WDTEN$OFF 000000  
                       i2u1_40 0018                         i2u1_41 0014                         i2u2_40 0034  
                       i2u2_41 0030                         _SSPBUF 000FC9                 __CFG_XINST$OFF 000000  
               __CFG_STVREN$ON 000000         ??_InterruptServiceHigh 0000                     __accesstop 0060  
      __end_of__initialization 0086                __CFG_PBADEN$OFF 000000                  ___rparam_used 000001  
               __pcstackCOMRAM 0000                  ??_UserProcess 0000                     __pnvCOMRAM 0001  
           __CFG_CCP2MX$PORTBE 000000                      ?_UserInit 0000            __end_of_UserProcess 0096  
                      __Hparam 0000                        __Lparam 0000                     ??_UserInit 0000  
                      __pcinit 0086                        __ramtop 0600                        __ptext0 0076  
                      __ptext1 0090                        __ptext2 0046           end_of_initialization 0086  
                  _UserProcess 0090                      _TRISCbits 000F94  __size_of_InterruptServiceHigh 003A  
          start_initialization 0086               __CFG_LPT1OSC$OFF 000000              __size_of_UserInit 0030  
                    __pintcode 0008                       _RCONbits 000FD0               __CFG_WDTPS$32768 000000  
                  _LED_Display 0001                   ?_UserProcess 0000                    _INTCON2bits 000FF1  
                     __Hrparam 0000                       __Lrparam 0000                       _UserInit 0046  
                __size_of_main 0010   __end_of_InterruptServiceHigh 0042                       int$flags 0002  
                   _INTCONbits 000FF2                       intlevel2 0000                    _SSPCON1bits 000FC6  
         __size_of_UserProcess 0006              __CFG_FOSC$INTIO67 000000  
