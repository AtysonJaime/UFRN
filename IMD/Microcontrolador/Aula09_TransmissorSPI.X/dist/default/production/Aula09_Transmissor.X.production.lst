

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat May 09 12:08:27 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15  0000                     
    16                           ; Version 2.05
    17                           ; Generated 20/12/2018 GMT
    18                           ; 
    19                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F45K20 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     
    51                           	psect	nvCOMRAM
    52  000001                     __pnvCOMRAM:
    53                           	opt callstack 0
    54  000001                     _LED_Display:
    55                           	opt callstack 0
    56  000001                     	ds	1
    57  0000                     _SSPBUF	set	4041
    58  0000                     _PORTD	set	3971
    59  0000                     _RCONbits	set	4048
    60  0000                     _INTCON2bits	set	4081
    61  0000                     _INTCONbits	set	4082
    62  0000                     _SSPSTATbits	set	4039
    63  0000                     _TRISCbits	set	3988
    64  0000                     _SSPCON1bits	set	4038
    65  0000                     _TRISBbits	set	3987
    66  0000                     _TRISD	set	3989
    67                           
    68                           ; #config settings
    69  0000                     
    70                           	psect	cinit
    71  00005C                     __pcinit:
    72                           	opt callstack 0
    73  00005C                     start_initialization:
    74                           	opt callstack 0
    75  00005C                     __initialization:
    76                           	opt callstack 0
    77  00005C                     end_of_initialization:
    78                           	opt callstack 0
    79  00005C                     __end_of__initialization:
    80                           	opt callstack 0
    81  00005C  9002               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    82  00005E  9202               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    83  000060  0100               	movlb	0
    84  000062  EF33  F000         	goto	_main	;jump to C main() function
    85                           
    86                           	psect	cstackCOMRAM
    87  000000                     __pcstackCOMRAM:
    88                           	opt callstack 0
    89  000000                     
    90                           ; 1 bytes @ 0x0
    91 ;;
    92 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    93 ;;
    94 ;; *************** function _main *****************
    95 ;; Defined at:
    96 ;;		line 66 in file "main_mestre.c"
    97 ;; Parameters:    Size  Location     Type
    98 ;;		None
    99 ;; Auto vars:     Size  Location     Type
   100 ;;		None
   101 ;; Return value:  Size  Location     Type
   102 ;;                  1    wreg      void 
   103 ;; Registers used:
   104 ;;		wreg, status,2, cstack
   105 ;; Tracked objects:
   106 ;;		On entry : 0/0
   107 ;;		On exit  : 0/0
   108 ;;		Unchanged: 0/0
   109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   110 ;;      Params:         0       0       0       0       0       0       0
   111 ;;      Locals:         0       0       0       0       0       0       0
   112 ;;      Temps:          0       0       0       0       0       0       0
   113 ;;      Totals:         0       0       0       0       0       0       0
   114 ;;Total ram usage:        0 bytes
   115 ;; Hardware stack levels required when called:    2
   116 ;; This function calls:
   117 ;;		_UserInit
   118 ;;		_UserProcess
   119 ;; This function is called by:
   120 ;;		Startup code after reset
   121 ;; This function uses a non-reentrant model
   122 ;;
   123                           
   124                           	psect	text0
   125  000066                     __ptext0:
   126                           	opt callstack 0
   127  000066                     _main:
   128                           	opt callstack 29
   129                           
   130                           ;main_mestre.c: 68:  UserInit();
   131                           
   132                           ;incstack = 0
   133  000066  EC17  F000         	call	_UserInit	;wreg free
   134  00006A                     l765:
   135                           
   136                           ;main_mestre.c: 71:   UserProcess();
   137  00006A  EC38  F000         	call	_UserProcess	;wreg free
   138  00006E  D7FD               	goto	l765
   139  000070                     __end_of_main:
   140                           	opt callstack 0
   141                           
   142 ;; *************** function _UserProcess *****************
   143 ;; Defined at:
   144 ;;		line 179 in file "main_mestre.c"
   145 ;; Parameters:    Size  Location     Type
   146 ;;		None
   147 ;; Auto vars:     Size  Location     Type
   148 ;;		None
   149 ;; Return value:  Size  Location     Type
   150 ;;                  1    wreg      void 
   151 ;; Registers used:
   152 ;;		None
   153 ;; Tracked objects:
   154 ;;		On entry : 0/0
   155 ;;		On exit  : 0/0
   156 ;;		Unchanged: 0/0
   157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   158 ;;      Params:         0       0       0       0       0       0       0
   159 ;;      Locals:         0       0       0       0       0       0       0
   160 ;;      Temps:          0       0       0       0       0       0       0
   161 ;;      Totals:         0       0       0       0       0       0       0
   162 ;;Total ram usage:        0 bytes
   163 ;; Hardware stack levels used:    1
   164 ;; Hardware stack levels required when called:    1
   165 ;; This function calls:
   166 ;;		Nothing
   167 ;; This function is called by:
   168 ;;		_main
   169 ;; This function uses a non-reentrant model
   170 ;;
   171                           
   172                           	psect	text1
   173  000070                     __ptext1:
   174                           	opt callstack 0
   175  000070                     _UserProcess:
   176                           	opt callstack 29
   177                           
   178                           ;main_mestre.c: 180:  PORTD = LED_Display;
   179                           
   180                           ;incstack = 0
   181  000070  C001  FF83         	movff	_LED_Display,3971	;volatile
   182  000074  0012               	return		;funcret
   183  000076                     __end_of_UserProcess:
   184                           	opt callstack 0
   185                           
   186 ;; *************** function _UserInit *****************
   187 ;; Defined at:
   188 ;;		line 89 in file "main_mestre.c"
   189 ;; Parameters:    Size  Location     Type
   190 ;;		None
   191 ;; Auto vars:     Size  Location     Type
   192 ;;		None
   193 ;; Return value:  Size  Location     Type
   194 ;;                  1    wreg      void 
   195 ;; Registers used:
   196 ;;		wreg, status,2
   197 ;; Tracked objects:
   198 ;;		On entry : 0/0
   199 ;;		On exit  : 0/0
   200 ;;		Unchanged: 0/0
   201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   202 ;;      Params:         0       0       0       0       0       0       0
   203 ;;      Locals:         0       0       0       0       0       0       0
   204 ;;      Temps:          0       0       0       0       0       0       0
   205 ;;      Totals:         0       0       0       0       0       0       0
   206 ;;Total ram usage:        0 bytes
   207 ;; Hardware stack levels used:    1
   208 ;; Hardware stack levels required when called:    1
   209 ;; This function calls:
   210 ;;		Nothing
   211 ;; This function is called by:
   212 ;;		_main
   213 ;; This function uses a non-reentrant model
   214 ;;
   215                           
   216                           	psect	text2
   217  00002E                     __ptext2:
   218                           	opt callstack 0
   219  00002E                     _UserInit:
   220                           	opt callstack 29
   221                           
   222                           ;main_mestre.c: 97:  LED_Display = 0b0001;
   223                           
   224                           ;incstack = 0
   225  00002E  0E01               	movlw	1
   226  000030  6E01               	movwf	_LED_Display,c
   227                           
   228                           ;main_mestre.c: 106:  TRISD = 0b00000000;
   229  000032  0E00               	movlw	0
   230  000034  6E95               	movwf	3989,c	;volatile
   231                           
   232                           ;main_mestre.c: 111:  TRISBbits.TRISB0 = 1;
   233  000036  8093               	bsf	3987,0,c	;volatile
   234                           
   235                           ;main_mestre.c: 136:  SSPCON1bits.SSPM3 = 0;
   236  000038  96C6               	bcf	4038,3,c	;volatile
   237                           
   238                           ;main_mestre.c: 137:  SSPCON1bits.SSPM2 = 0;
   239  00003A  94C6               	bcf	4038,2,c	;volatile
   240                           
   241                           ;main_mestre.c: 138:  SSPCON1bits.SSPM1 = 0;
   242  00003C  92C6               	bcf	4038,1,c	;volatile
   243                           
   244                           ;main_mestre.c: 139:  SSPCON1bits.SSPM0 = 0;
   245  00003E  90C6               	bcf	4038,0,c	;volatile
   246                           
   247                           ;main_mestre.c: 140:  TRISCbits.TRISC3 = 0;
   248  000040  9694               	bcf	3988,3,c	;volatile
   249                           
   250                           ;main_mestre.c: 141:  TRISCbits.TRISC4 = 1;
   251  000042  8894               	bsf	3988,4,c	;volatile
   252                           
   253                           ;main_mestre.c: 142:  TRISCbits.TRISC5 = 0;
   254  000044  9A94               	bcf	3988,5,c	;volatile
   255                           
   256                           ;main_mestre.c: 143:  SSPSTATbits.CKE = 0;
   257  000046  9CC7               	bcf	4039,6,c	;volatile
   258                           
   259                           ;main_mestre.c: 144:  SSPCON1bits.CKP = 0;
   260  000048  98C6               	bcf	4038,4,c	;volatile
   261                           
   262                           ;main_mestre.c: 145:  SSPSTATbits.SMP = 0;
   263  00004A  9EC7               	bcf	4039,7,c	;volatile
   264                           
   265                           ;main_mestre.c: 146:  SSPCON1bits.SSPEN = 1;
   266  00004C  8AC6               	bsf	4038,5,c	;volatile
   267                           
   268                           ;main_mestre.c: 164:  INTCONbits.INT0IE = 1;
   269  00004E  88F2               	bsf	4082,4,c	;volatile
   270                           
   271                           ;main_mestre.c: 165:     INTCONbits.INT0IF = 0;
   272  000050  92F2               	bcf	4082,1,c	;volatile
   273                           
   274                           ;main_mestre.c: 166:  INTCON2bits.INTEDG0 = 0;
   275  000052  9CF1               	bcf	4081,6,c	;volatile
   276                           
   277                           ;main_mestre.c: 167:  INTCON2bits.RBPU = 0;
   278  000054  9EF1               	bcf	4081,7,c	;volatile
   279                           
   280                           ;main_mestre.c: 168:  RCONbits.IPEN = 0;
   281  000056  9ED0               	bcf	4048,7,c	;volatile
   282                           
   283                           ;main_mestre.c: 169:     INTCONbits.GIEH = 1;
   284  000058  8EF2               	bsf	4082,7,c	;volatile
   285  00005A  0012               	return		;funcret
   286  00005C                     __end_of_UserInit:
   287                           	opt callstack 0
   288                           
   289 ;; *************** function _InterruptServiceHigh *****************
   290 ;; Defined at:
   291 ;;		line 195 in file "main_mestre.c"
   292 ;; Parameters:    Size  Location     Type
   293 ;;		None
   294 ;; Auto vars:     Size  Location     Type
   295 ;;		None
   296 ;; Return value:  Size  Location     Type
   297 ;;                  1    wreg      void 
   298 ;; Registers used:
   299 ;;		wreg, status,2, status,0
   300 ;; Tracked objects:
   301 ;;		On entry : 0/0
   302 ;;		On exit  : 0/0
   303 ;;		Unchanged: 0/0
   304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   305 ;;      Params:         0       0       0       0       0       0       0
   306 ;;      Locals:         0       0       0       0       0       0       0
   307 ;;      Temps:          0       0       0       0       0       0       0
   308 ;;      Totals:         0       0       0       0       0       0       0
   309 ;;Total ram usage:        0 bytes
   310 ;; Hardware stack levels used:    1
   311 ;; This function calls:
   312 ;;		Nothing
   313 ;; This function is called by:
   314 ;;		Interrupt level 2
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318                           	psect	intcode
   319  000008                     __pintcode:
   320                           	opt callstack 0
   321  000008                     _InterruptServiceHigh:
   322                           	opt callstack 29
   323                           
   324                           ;incstack = 0
   325  000008  8202               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   326                           
   327                           ;main_mestre.c: 206:     if (INTCONbits.INT0IF == 1)
   328  00000A  A2F2               	btfss	4082,1,c	;volatile
   329  00000C  D00C               	goto	i2l47
   330                           
   331                           ;main_mestre.c: 207:     {;main_mestre.c: 214:         INTCONbits.INT0IF = 0;
   332  00000E  92F2               	bcf	4082,1,c	;volatile
   333                           
   334                           ;main_mestre.c: 224:   LED_Display = LED_Display << 1;
   335  000010  5001               	movf	_LED_Display,w,c
   336  000012  2401               	addwf	_LED_Display,w,c
   337  000014  6E01               	movwf	_LED_Display,c
   338                           
   339                           ;main_mestre.c: 226:   if(LED_Display == 0b10000){
   340  000016  0E10               	movlw	16
   341  000018  1801               	xorwf	_LED_Display,w,c
   342  00001A  A4D8               	btfss	status,2,c
   343  00001C  D002               	goto	i2l775
   344                           
   345                           ;main_mestre.c: 227:    LED_Display = 1;
   346  00001E  0E01               	movlw	1
   347  000020  6E01               	movwf	_LED_Display,c
   348  000022                     i2l775:
   349                           
   350                           ;main_mestre.c: 247:   SSPBUF = LED_Display;
   351  000022  C001  FFC9         	movff	_LED_Display,4041	;volatile
   352  000026                     i2l47:
   353  000026  9202               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   354  000028  0011               	retfie		f
   355  00002A                     __end_of_InterruptServiceHigh:
   356                           	opt callstack 0
   357  0000                     
   358                           	psect	rparam
   359  0000                     
   360                           	psect	temp
   361  000002                     btemp:
   362                           	opt callstack 0
   363  000002                     	ds	1
   364  0000                     int$flags	set	btemp
   365  0000                     wtemp8	set	btemp+1
   366  0000                     ttemp5	set	btemp+1
   367  0000                     ttemp6	set	btemp+4
   368  0000                     ttemp7	set	btemp+8
   369                           tosu	equ	0xFFF
   370                           tosh	equ	0xFFE
   371                           tosl	equ	0xFFD
   372                           stkptr	equ	0xFFC
   373                           pclatu	equ	0xFFB
   374                           pclath	equ	0xFFA
   375                           pcl	equ	0xFF9
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           prodh	equ	0xFF4
   381                           prodl	equ	0xFF3
   382                           indf0	equ	0xFEF
   383                           postinc0	equ	0xFEE
   384                           postdec0	equ	0xFED
   385                           preinc0	equ	0xFEC
   386                           plusw0	equ	0xFEB
   387                           fsr0h	equ	0xFEA
   388                           fsr0l	equ	0xFE9
   389                           wreg	equ	0xFE8
   390                           indf1	equ	0xFE7
   391                           postinc1	equ	0xFE6
   392                           postdec1	equ	0xFE5
   393                           preinc1	equ	0xFE4
   394                           plusw1	equ	0xFE3
   395                           fsr1h	equ	0xFE2
   396                           fsr1l	equ	0xFE1
   397                           bsr	equ	0xFE0
   398                           indf2	equ	0xFDF
   399                           postinc2	equ	0xFDE
   400                           postdec2	equ	0xFDD
   401                           preinc2	equ	0xFDC
   402                           plusw2	equ	0xFDB
   403                           fsr2h	equ	0xFDA
   404                           fsr2l	equ	0xFD9
   405                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       1
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptServiceHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptServiceHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptServiceHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptServiceHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptServiceHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptServiceHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptServiceHigh in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _UserInit
                        _UserProcess
 ---------------------------------------------------------------------------------
 (1) _UserProcess                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UserInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _InterruptServiceHigh                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UserInit
   _UserProcess

 _InterruptServiceHigh (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      0       1       1        1.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       1       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       1      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat May 09 12:08:27 2020

                  _SSPSTATbits 000FC7                   __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000  
                 __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000                            l765 006A  
                 __CFG_CPB$OFF 000000                   __CFG_CPD$OFF 000000                   __CFG_BORV$18 000000  
         _InterruptServiceHigh 0008                   __CFG_LVP$OFF 000000                           i2l47 0026  
                         _main 0066                           btemp 0002                           start 002A  
                __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000                   ___param_bank 000000  
                        ?_main 0000                          i2l775 0022                          _PORTD 000F83  
        ?_InterruptServiceHigh 0000                          _TRISD 000F95                  __CFG_PWRT$OFF 000000  
                __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000  
                __CFG_WRT3$OFF 000000                 __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000  
               __CFG_EBTR1$OFF 000000                 __CFG_EBTR2$OFF 000000                 __CFG_EBTR3$OFF 000000  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
               __CFG_EBTRB$OFF 000000                 __CFG_BOREN$OFF 000000                          ttemp5 0003  
                        ttemp6 0006                          ttemp7 000A                          status 000FD8  
                        wtemp8 0003                __initialization 005C                   __end_of_main 0070  
                       ??_main 0000                  __activetblptr 000000               __end_of_UserInit 005C  
               __CFG_WDTEN$OFF 000000                         _SSPBUF 000FC9                 __CFG_XINST$OFF 000000  
               __CFG_STVREN$ON 000000         ??_InterruptServiceHigh 0000                     __accesstop 0060  
      __end_of__initialization 005C                __CFG_PBADEN$OFF 000000                  ___rparam_used 000001  
               __pcstackCOMRAM 0000                  ??_UserProcess 0000                     __pnvCOMRAM 0001  
           __CFG_CCP2MX$PORTBE 000000                      ?_UserInit 0000            __end_of_UserProcess 0076  
                      __Hparam 0000                        __Lparam 0000                     ??_UserInit 0000  
                      __pcinit 005C                        __ramtop 0600                        __ptext0 0066  
                      __ptext1 0070                        __ptext2 002E           end_of_initialization 005C  
                  _UserProcess 0070                      _TRISBbits 000F93                      _TRISCbits 000F94  
__size_of_InterruptServiceHigh 0022            start_initialization 005C               __CFG_LPT1OSC$OFF 000000  
            __size_of_UserInit 002E                      __pintcode 0008                       _RCONbits 000FD0  
             __CFG_WDTPS$32768 000000                    _LED_Display 0001                   ?_UserProcess 0000  
                  _INTCON2bits 000FF1                       __Hrparam 0000                       __Lrparam 0000  
                     _UserInit 002E                  __size_of_main 000A   __end_of_InterruptServiceHigh 002A  
                     int$flags 0002                     _INTCONbits 000FF2                       intlevel2 0000  
                  _SSPCON1bits 000FC6           __size_of_UserProcess 0006              __CFG_FOSC$INTIO67 000000  
