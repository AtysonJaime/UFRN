;====================================================================
; Main.asm file generated by New Project wizard
; Grupo 01 - Semana 8 - Programador Horário
; Created:   qua out 28 2020
; Processor: ATmega328P
; Compiler:  AVRASM (Proteus)
;====================================================================

;====================================================================
; VARIABLES
;====================================================================

.INCLUDE "m328Pdef.inc"
.ORG 0

.equ MOSI = 3
.equ SCK = 5
.equ SS1 = 2
.equ SS2 = 0

;====================================================================
; DEFINITIONS
;====================================================================
      ;R17 - REG_POINTER
      ;R18 - REG_TWOF
      ;R19 - REG_HOUR_R
      ;R20 - REG_MIN_R
      ;R21 - REG_WEEK_R
      ;R22 - REG_HOUR_ON
      ;R23 - REG_MIN_ON
      ;R24 - REG_WEEK_ON
      ;R25 - REG_HOUR_OFF
      ;R26 - REG_MIN_OFF
      ;R27 - REG_WEEK_OFF
      
      ;1 - Saida
      ;0 - Entrada
      
      ; CONFIGURA PORT B
      ;PB0,PB1,PB2,PB3,PB5,PB7 - SAIDAS;
      ;PB4,PB6 - ENTRADAS;
      ldi r16, 0b1010_1111
      out ddrb, r16
      
      ; CONFIGURA PORT C
      ;PC0,PC1,PC2 - SAIDA;
      ;PC3,PC4,PC5,PC6 - ENTRADAS;
      ldi r16, 0b0000_0111
      out ddrc, r16
      
      ; CONFIGURA PORT D
      ;PD0,PD1,PD2,PD3 - SAIDA;
      ;PD4,PD5,PD6,PD7 - ENTRADAS;
      ldi r16, 0b0000_1111
      out ddrd, r16
      
      
      ;; Configura TIMER1 para os leds piscando;
      ldi r16,0b00000000
      sts TCCR1A, r16 ;Set Normal port, AC1A disconnected
      ldi r16, 0b00001000 ;Set Time CTC MODE, Set preescaler
      sts TCCR1B, r16
      ldi r16,0b0000_0000
      ldi r17,0b1001_0001
      sts OCR1AH, r16
      sts OCR1AL, r17
      ldi r16, 0b00001100 ;Set Time CTC MODE, Set preescaler
      sts TCCR1B, r16
      
      
      ; HABILITA SPI e CLOCK DO MESTRE
      ldi R30,(1<<SPE) | (1<<MSTR); habilita SPI
      out SPCR, R30 ; Atmega mestre com clock = fck/4


      ldi R30, 0b00000111
      out DDRC, R30

      sbi PORTB, SS1
      sbi PORTB, SS2

      ldi R16, 0x09 ;decode mode do MAX7221
      ldi R29, 0b00001111 ;habilita o decode para os digitos de 0 a 3
      rcall runCMD
	 
      ldi R16, 0x0B ;scan limit
      ldi R29, 0x03 ; scan quatro displays 7seg
      rcall runCMD
	 
      ldi R16, 0x0C ; comando de liga/desliga
      ldi R29, 0x01 ; liga o ci
      rcall runCMD
	 
      ldi R16, 0x00 ; comando de liga/desliga
      ldi R29, 0x00 ; liga o ci
      rcall runCMD
      
      rjmp START


;--------------------Estado START. Conforme a MDE, a máquina dá clear em todos os registradores usados e preset
;--------------------no valor do registrador de dias da semana para selecionar o domingo como ponto inicial do
;--------------------próximo estado e vai direto para o estdao RUN.------------------------------------------------------
START:
CLR R17
CLR R18
CLR R19
CLR R20
LDI R21, 0b00000001
CLR R22
CLR R23
LDI R24, 0b00000001
CLR R25
CLR R26
LDI R27, 0b00000001



;----------Estado RUN. Checa se tá no intervalo de alarme e modifica o OUT. Além disso, checa qual botão foi apertado: A ou R--------------------------------
RUN:


SBIC PIND, PD7 ; so pra garantir que o botao R foi solto
JMP RUN ; so pra garantir que o botao R foi solto

SBIC PIND, PD6 ; so pra garantir que o botao A foi solto
JMP RUN ; so pra garantir que o botao A foi solto


;LIMPA LEDS DE ESTADOS E TIMER--------------------
ldi r16, 0b00000000
sts TCCR1A, r16 ;Set Normal port, AC1A disconnected
sts TCNT1H, r16 ;Clear Contador
sts TCNT1L, r16 ;Clear Contador
cbi PORTB, 1 ;Clear PB1
cbi PORTD, 0
cbi PORTD, 1
cbi PORTD, 2
cbi PORTD, 3



RUNeae:

   rjmp RTC_minutos

volta1:
SBIC PIND, PD6 ; Se o pino PC2 estiver em baixo, a próxima instrução não é executada, ou seja, a pessoa não apertou o Botão A
JMP AJUSTE_AGENDAMENTO_INICIO ; Se pulou para aqui, é pq o o BOTÃO A foi apertado, então vai para o ajuste do agendamento
SBIC PIND, PD7 ; Chegou aqui pq o botao anterior não estava apertado. Então, se o pino PC3 estiver não estiver em alto, a próxima instrução não é executada, ou seja, a pessoa não apertou o Botão R
JMP AJUSTE_RELOGIO ; Se pulou para aqui, é pq o o BOTÃO R foi apertado, então vai para o ajuste do relógio
JMP RUNeae ; Se chegou aqui é pq nem o botão A nem o R foram apertados, então volta para o RUN para checar novamente.



;----Estado de ajuste de relógio, só chegou aqui se o PC3 (Botão R) estava ativo--------------
AJUSTE_RELOGIO:
JMP TIMER_H

;----Estado de ajuste do inicio do agendamento, só chegou aqui se o PC2 (Botão A) estava ativo--------------
AJUSTE_AGENDAMENTO_INICIO:
JMP ON_H


;----Estado de ajuste do Fim do agendamento--------------
AJUSTE_AGENDAMENTO_FIM:
JMP OFF_H




TIMER_H:

SBIC PIND, PD7 ; so pra garantir que o botao R foi solto
RJMP TIMER_H ; so pra garantir que o botao R foi solto

;ACENTE LED T--------------------
sbi PORTD, 0

TIMER_Heae:
  
   ;;;;;;;;;SPI ESCREVE HORA;;;;;;;;;;
   cbi PORTB, SS1
   ldi R16, 0x05 ;carrega o endereço de escrita dos minutos
   out SPDR, R16 ;enviar o endereço
   rcall envia_horas ;envia os dados de hora para o CI 6902
   rcall dezena_horas ;separa a dezena e unidade dos dados da hora
   rcall display_horas1 ;mostra os dados da hora no display
   rcall apaga_display_minutos ;apaga os display dos minutos
   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   ldi r17, 0b00000001 ; Valor do ponteiro do Timer_H
   SBIC PIND, PD7 ; CHECA: Se o botão R nao estiver apertado, pula a proxima instrucao
   JMP TIMER_M ; Se chegou aqui é pq apertou o botao R, entao vai pra o proximo estado da sequencia de ajuste do relogio
   SBIC PIND, PD5 ; CHECA: Se o botão UP nao estiver apertado, pula a proxima instrucao
   JMP INCREMENTO ; Se chegou aqui é pq apertou o botao Up, entao vai pra o estado de incremento
   SBIC PIND, PD4 ; CHECA: Se o botão Down nao estiver apertado, pula a proxima instrucao
   JMP DECREMENTO ; Se chegou aqui é pq apertou o botao Down, entao vai pra o estado de decremento
   JMP TIMER_Heae ; Se chegou aquí é pq nao apertou nada. Volta até apertar


TIMER_M:

SBIC PIND, PD7 ; so pra garantir que o botao R foi solto
RJMP TIMER_M ; so pra garantir que o botao R foi solto


;ACIONA TIMER PARA LED PISCAR--------------------
ldi r16, 0b01000000
sts TCCR1A, r16 ;Toggle PB1/AC1A


TIMER_Meae:

   cbi PORTB, SS1
   ldi R16, 0x03 ;carrega o endereço de escrita dos minutos
   out SPDR, R16 ;enviar o endereço
   rcall envia_minutos
   rcall dezena_minutos
   rcall display_minutos1
   rcall apaga_display_horas
ldi r17, 0b00000010
SBIC PIND, PD7 ; CHECA: Se o botão R nao estiver apertado, pula a proxima instrucao
JMP WEEK ; Se chegou aqui é pq apertou o botao R, entao vai pra o proximo estado da sequencia de ajuste do relogio
SBIC PIND, PD5 ; CHECA: Se o botão UP nao estiver apertado, pula a proxima instrucao
JMP INCREMENTO ; Se chegou aqui é pq apertou o botao Up, entao vai pra o estado de incremento
SBIC PIND, PD4 ; CHECA: Se o botão Down nao estiver apertado, pula a proxima instrucao
JMP DECREMENTO ; Se chegou aqui é pq apertou o botao Down, entao vai pra o estado de decremento
JMP TIMER_Meae ; Se chegou aquí é pq nao apertou nada. Volta até apertar



WEEK:
SBIC PIND, PD7 ; so pra garantir que o botao R foi solto
JMP WEEK ; so pra garantir que o botao R foi solto

;CLEAR NO TIMER e ACENDE LED W--------------------
ldi r16, 0b00000000
sts TCCR1A, r16 ;Set Normal port, AC1A disconnected
sts TCNT1H, r16 ;Clear Contador
sts TCNT1L, r16 ;Clear Contador
cbi PORTB, 1 ;Clear PB1
ldi r16, 0b01000000
sts TCCR1A, r16 ;Toggle PB1/AC1A
sbi PORTD, 1

;mov r16, r21
;andi r21, 0b00000111

cpi r21, 0b00000001
breq domingo
cpi r21, 0b00000010
breq segunda
cpi r21, 0b00000011
breq terca
cpi r21, 0b00000100
breq quarta
cpi r21, 0b00000101
breq quinta
cpi r21, 0b00000110
breq sexta
cpi r21, 0b00000111
breq sabado

domingo:
SBI PORTC, PC0
CBI PORTC, PC1
CBI PORTC, PC2
rjmp WEEKeae

segunda:
CBI PORTC, PC0
SBI PORTC, PC1
CBI PORTC, PC2
rjmp WEEKeae

terca:
SBI PORTC, PC0
SBI PORTC, PC1
CBI PORTC, PC2
rjmp WEEKeae

quarta:
CBI PORTC, PC0
CBI PORTC, PC1
SBI PORTC, PC2
rjmp WEEKeae

quinta:
SBI PORTC, PC0
CBI PORTC, PC1
SBI PORTC, PC2
rjmp WEEKeae

sexta:
CBI PORTC, PC0
SBI PORTC, PC1
SBI PORTC, PC2
rjmp WEEKeae

sabado:
   SBI PORTC, PC0
   SBI PORTC, PC1
   SBI PORTC, PC2
   rjmp WEEKeae

WEEKeae:

   ldi R16, 0x0B ;carrega o endereço de leitura dos minutos
   cbi PORTB, SS1
   out SPDR, R16 ;enviar o endereço
   rcall envia_dias
   rcall dezena_horas
   rcall display_horas1
ldi r17, 0b00000011
SBIC PIND, PD7 ; CHECA: Se o botão R nao estiver apertado, pula a proxima instrucao
JMP RUN ; Se chegou aqui é pq apertou o botao R, entao acabou o ajuste de relogio e volta pro RUN
SBIC PIND, PD5 ; CHECA: Se o botão UP nao estiver apertado, pula a proxima instrucao
JMP INCREMENTO ; Se chegou aqui é pq apertou o botao Up, entao vai pra o estado de incremento
SBIC PIND, PD4 ; CHECA: Se o botão Down nao estiver apertado, pula a proxima instrucao
JMP DECREMENTO ; Se chegou aqui é pq apertou o botao Down, entao vai pra o estado de decremento
JMP WEEKeae ; Se chegou aquí é pq nao apertou nada. Volta até apertar


ON_H:
SBIC PIND, PD6 ; so pra garantir que o botao A foi solto
JMP ON_H ; so pra garantir que o botao A foi solto

;ACENDE LED O--------------------
sbi PORTD,2


ON_Heae:
ldi r17, 0b00000100
SBIC PIND, PD6 ; CHECA: Se o botão A nao estiver apertado, pula a proxima instrucao
JMP ON_M ; Se chegou aqui é pq apertou o botao A,  entao vai pra o proximo estado da sequencia de ajuste do agendamento
SBIC PIND, PD5 ; CHECA: Se o botão UP nao estiver apertado, pula a proxima instrucao
JMP INCREMENTO ; Se chegou aqui é pq apertou o botao Up, entao vai pra o estado de incremento
SBIC PIND, PD4 ; CHECA: Se o botão Down nao estiver apertado, pula a proxima instrucao
JMP DECREMENTO ; Se chegou aqui é pq apertou o botao Down, entao vai pra o estado de decremento
JMP ON_Heae ; Se chegou aquí é pq nao apertou nada. Volta até apertar


ON_M:
SBIC PIND, PD6 ; so pra garantir que o botao A foi solto
JMP ON_M ; so pra garantir que o botao A foi solto

;ACIONA LED PISCANDO--------------------
ldi r16, 0b01000000
sts TCCR1A, r16 ;Toggle PB1/AC1A

ON_Meae:
ldi r17, 0b00000101
SBIC PIND, PD6 ; CHECA: Se o botão A nao estiver apertado, pula a proxima instrucao
JMP WEEK_ON ; Se chegou aqui é pq apertou o botao A,  entao vai pra o proximo estado da sequencia de ajuste do agendamento
SBIC PIND, PD5 ; CHECA: Se o botão UP nao estiver apertado, pula a proxima instrucao
JMP INCREMENTO ; Se chegou aqui é pq apertou o botao Up, entao vai pra o estado de incremento
SBIC PIND, PD4 ; CHECA: Se o botão Down nao estiver apertado, pula a proxima instrucao
JMP DECREMENTO ; Se chegou aqui é pq apertou o botao Down, entao vai pra o estado de decremento
JMP ON_Meae ; Se chegou aquí é pq nao apertou nada. Volta até apertar


WEEK_ON:
SBIC PIND, PD6 ; so pra garantir que o botao A foi solto
JMP WEEK_ON ; so pra garantir que o botao A foi solto

;CLEAR TIMER e ACENDE LED w--------------------
ldi r16, 0b00000000
sts TCCR1A, r16 ;Set Normal port, AC1A disconnected
sts TCNT1H, r16 ;Clear Contador
sts TCNT1L, r16 ;Clear Contador
cbi PORTB, 1 ;Clear PB1
ldi r16, 0b01000000
sts TCCR1A, r16 ;Toggle PB1/AC1A
sbi PORTD, 1;

mov r16, r24
andi r16, 0b00000111

cpi r16, 0b00000001
breq domingo1
cpi r16, 0b00000010
breq segunda1
cpi r16, 0b00000011
breq terca1
cpi r16, 0b00000100
breq quarta1
cpi r16, 0b00000101
breq quinta1
cpi r16, 0b00000110
breq sexta1
cpi r16, 0b00000111
breq sabado1

domingo1:
SBI PORTC, PC0
CBI PORTC, PC1
CBI PORTC, PC2
rjmp WEEK_ONeae

segunda1:
CBI PORTC, PC0
SBI PORTC, PC1
CBI PORTC, PC2
rjmp WEEK_ONeae

terca1:
SBI PORTC, PC0
SBI PORTC, PC1
CBI PORTC, PC2
rjmp WEEK_ONeae

quarta1:
CBI PORTC, PC0
CBI PORTC, PC1
SBI PORTC, PC2
rjmp WEEK_ONeae

quinta1:
SBI PORTC, PC0
CBI PORTC, PC1
SBI PORTC, PC2
rjmp WEEK_ONeae

sexta1:
CBI PORTC, PC0
SBI PORTC, PC1
SBI PORTC, PC2
rjmp WEEK_ONeae

sabado1:
SBI PORTC, PC0
SBI PORTC, PC1
SBI PORTC, PC2
rjmp WEEK_ONeae

WEEK_ONeae:
ldi r17, 0b00000110
SBIC PIND, PD6 ; CHECA: Se o botão A nao estiver apertado, pula a proxima instrucao
JMP AJUSTE_AGENDAMENTO_FIM ; Se chegou aqui é pq apertou o botao A,  entao vai pra o proximo estado da sequencia de ajuste do agendamento
SBIC PIND, PD5 ; CHECA: Se o botão UP nao estiver apertado, pula a proxima instrucao
JMP INCREMENTO ; Se chegou aqui é pq apertou o botao Up, entao vai pra o estado de incremento
SBIC PIND, PD4 ; CHECA: Se o botão Down nao estiver apertado, pula a proxima instrucao
JMP DECREMENTO ; Se chegou aqui é pq apertou o botao Down, entao vai pra o estado de decremento
JMP WEEK_ONeae ; Se chegou aquí é pq nao apertou nada. Volta até apertar


OFF_H:
SBIC PIND, PD6 ; so pra garantir que o botao A foi solto
JMP OFF_H ; so pra garantir que o botao A foi solto

;CLEAR TIMER, LEDS e ACENDE LED F--------------------
ldi r16, 0b00000000
sts TCCR1A, r16 ;Set Normal port, AC1A disconnected
sts TCNT1H, r16 ;Clear Contador
sts TCNT1L, r16 ;Clear Contador
cbi PORTB, 1 ;Clear PB1
cbi PORTD, 2
cbi PORTD, 1
sbi PORTD, 3

OFF_Heae:
ldi r17, 0b00000111
SBIC PIND, PD6 ; CHECA: Se o botão A nao estiver apertado, pula a proxima instrucao
JMP OFF_M ; Se chegou aqui é pq apertou o botao A,  entao vai pra o proximo estado da sequencia de ajuste do agendamento
SBIC PIND, PD5 ; CHECA: Se o botão UP nao estiver apertado, pula a proxima instrucao
JMP INCREMENTO ; Se chegou aqui é pq apertou o botao Up, entao vai pra o estado de incremento
SBIC PIND, PD4 ; CHECA: Se o botão Down nao estiver apertado, pula a proxima instrucao
JMP DECREMENTO ; Se chegou aqui é pq apertou o botao Down, entao vai pra o estado de decremento
JMP OFF_Heae ; Se chegou aquí é pq nao apertou nada. Volta até apertar


OFF_M:
SBIC PIND, PD6 ; so pra garantir que o botao A foi solto
JMP OFF_M ; so pra garantir que o botao A foi solto

;ACIONA LED PISCANDO--------------------
ldi r16, 0b01000000 ;Toggle PB1/AC1A
sts TCCR1A, r16

OFF_Meae:
ldi r17, 0b00001000
SBIC PIND, PD6 ; CHECA: Se o botão A nao estiver apertado, pula a proxima instrucao
JMP WEEK_OFF ; Se chegou aqui é pq apertou o botao A,  entao vai pra o proximo estado da sequencia de ajuste do agendamento
SBIC PIND, PD5 ; CHECA: Se o botão UP nao estiver apertado, pula a proxima instrucao
JMP INCREMENTO ; Se chegou aqui é pq apertou o botao Up, entao vai pra o estado de incremento
SBIC PIND, PD4 ; CHECA: Se o botão Down nao estiver apertado, pula a proxima instrucao
JMP DECREMENTO ; Se chegou aqui é pq apertou o botao Down, entao vai pra o estado de decremento
JMP OFF_Meae ; Se chegou aquí é pq nao apertou nada. Volta até apertar


WEEK_OFF:
SBIC PIND, PD6 ; so pra garantir que o botao A foi solto
JMP WEEK_OFF ; so pra garantir que o botao A foi solto

;CLEAR TIMER e ACENDE LED w--------------------
ldi r16, 0b00000000
sts TCCR1A, r16 ;Set Normal port, AC1A disconnected
sts TCNT1H, r16 ;Clear Contador
sts TCNT1L, r16 ;Clear Contador
cbi PORTB, 1 ;Clear PB1
ldi r16, 0b01000000
sts TCCR1A, r16 ;Toggle PB1/AC1A
sbi PORTD, 1;

mov r16, r27
andi r16, 0b00000111

cpi r16, 0b00000001
breq domingo2
cpi r16, 0b00000010
breq segunda2
cpi r16, 0b00000011
breq terca2
cpi r16, 0b00000100
breq quarta2
cpi r16, 0b00000101
breq quinta2
cpi r16, 0b00000110
breq sexta2
cpi r16, 0b00000111
breq sabado2

domingo2:
SBI PORTC, PC0
CBI PORTC, PC1
CBI PORTC, PC2
rjmp WEEK_OFFeae

segunda2:
CBI PORTC, PC0
SBI PORTC, PC1
CBI PORTC, PC2
rjmp WEEK_OFFeae

terca2:
SBI PORTC, PC0
SBI PORTC, PC1
CBI PORTC, PC2
rjmp WEEK_OFFeae

quarta2:
CBI PORTC, PC0
CBI PORTC, PC1
SBI PORTC, PC2
rjmp WEEK_OFFeae

quinta2:
SBI PORTC, PC0
CBI PORTC, PC1
SBI PORTC, PC2
rjmp WEEK_OFFeae

sexta2:
CBI PORTC, PC0
SBI PORTC, PC1
SBI PORTC, PC2
rjmp WEEK_OFFeae

sabado2:
SBI PORTC, PC0
SBI PORTC, PC1
SBI PORTC, PC2
rjmp WEEK_OFFeae

WEEK_OFFeae:
ldi r17, 0b00001001
SBIC PIND, PD6 ; CHECA: Se o botão A nao estiver apertado, pula a proxima instrucao
JMP RUN ; Se chegou aqui é pq apertou o botao A,  entao o ajuste de agendamento acabou. Volta para o estado RUN
SBIC PIND, PD5 ; CHECA: Se o botão UP nao estiver apertado, pula a proxima instrucao
JMP INCREMENTO ; Se chegou aqui é pq apertou o botao Up, entao vai pra o estado de incremento
SBIC PIND, PD4 ; CHECA: Se o botão Down nao estiver apertado, pula a proxima instrucao
JMP DECREMENTO ; Se chegou aqui é pq apertou o botao Down, entao vai pra o estado de decremento
JMP WEEK_OFFeae ; Se chegou aquí é pq nao apertou nada. Volta até apertar



;-----ESTADO DE INCREMENTO: PULA PARA O INCREMENTO DE ACORDO COM O PONTEIRO-------
INCREMENTO:

SBIC PIND, PD5 ; so pra garantir que o botao up foi solto
JMP INCREMENTO ; so pra garantir que o botao up foi solto

CPI r17, 0b00000001
BREQ INC_REG_HOUR_Ra  ; Tive que fazer esse "ajuste", pq o BREQ tem limitação de tamanho de pulo. 
JMP eae2
INC_REG_HOUR_Ra: JMP INC_REG_HOUR_R

eae2:
CPI r17, 0b00000010
BREQ INC_REG_MIN_Ra
JMP eae3
INC_REG_MIN_Ra: JMP INC_REG_MIN_R  ; Tive que fazer esse "ajuste", pq o BREQ tem limitação de tamanho de pulo. 

eae3:
CPI r17, 0b00000011
BREQ INC_REG_WEEK_Ra
jmp eae4
INC_REG_WEEK_Ra: JMP INC_REG_WEEK_R  ; Tive que fazer esse "ajuste", pq o BREQ tem limitação de tamanho de pulo. 

eae4:
CPI r17, 0b00000100
BREQ INC_REG_HOUR_ONa
jmp eae5
INC_REG_HOUR_ONa : JMP INC_REG_HOUR_ON  ; Tive que fazer esse "ajuste", pq o BREQ tem limitação de tamanho de pulo. 

eae5:
CPI r17, 0b00000101
BREQ INC_REG_MIN_ONa
jmp eae6
INC_REG_MIN_ONa: JMP INC_REG_MIN_ON  ; Tive que fazer esse "ajuste", pq o BREQ tem limitação de tamanho de pulo. 

eae6:
CPI r17, 0b00000110
BREQ INC_REG_WEEK_ONa
jmp eae7
INC_REG_WEEK_ONa : JMP INC_REG_WEEK_ON  ; Tive que fazer esse "ajuste", pq o BREQ tem limitação de tamanho de pulo. 

eae7:
CPI r17, 0b00000111
BREQ INC_REG_HOUR_OFFa
jmp eae8
INC_REG_HOUR_OFFa: JMP INC_REG_HOUR_OFF  ; Tive que fazer esse "ajuste", pq o BREQ tem limitação de tamanho de pulo. 

eae8:
CPI r17, 0b00001000
BREQ INC_REG_MIN_OFFa
jmp eae9
INC_REG_MIN_OFFa: JMP INC_REG_MIN_OFF  ; Tive que fazer esse "ajuste", pq o BREQ tem limitação de tamanho de pulo. 

eae9:
CPI r17, 0b00001001
BREQ INC_REG_WEEK_OFFa
INC_REG_WEEK_OFFa: JMP INC_REG_WEEK_OFF  ; Tive que fazer esse "ajuste", pq o BREQ tem limitação de tamanho de pulo. 


;-----ESTADO DE DECREMENTO: PULA PARA O INCREMENTO DE ACORDO COM O PONTEIRO-------
DECREMENTO:
SBIC PIND, PD4 ; so pra garantir que o botao down foi solto
JMP DECREMENTO ; so pra garantir que o botao down foi solto


CPI r17, 0b00000001
BREQ DEC_REG_HOUR_Ra
jmp eae10
DEC_REG_HOUR_Ra : JMP DEC_REG_HOUR_R  ; Tive que fazer esse "ajuste", pq o BREQ tem limitação de tamanho de pulo. 

eae10:
CPI r17, 0b00000010
BREQ DEC_REG_MIN_Ra
jmp eae11
DEC_REG_MIN_Ra : JMP DEC_REG_MIN_R  ; Tive que fazer esse "ajuste", pq o BREQ tem limitação de tamanho de pulo. 

eae11:
CPI r17, 0b00000011
BREQ DEC_REG_WEEK_Ra
jmp eae12
DEC_REG_WEEK_Ra: JMP DEC_REG_WEEK_R  ; Tive que fazer esse "ajuste", pq o BREQ tem limitação de tamanho de pulo. 

eae12:
CPI r17, 0b00000100
BREQ DEC_REG_HOUR_ONa
jmp eae13
DEC_REG_HOUR_ONa: JMP DEC_REG_HOUR_ON  ; Tive que fazer esse "ajuste", pq o BREQ tem limitação de tamanho de pulo. 

eae13:
CPI r17, 0b00000101
BREQ DEC_REG_MIN_ONa
jmp eae14
DEC_REG_MIN_ONa: JMP DEC_REG_MIN_ON  ; Tive que fazer esse "ajuste", pq o BREQ tem limitação de tamanho de pulo. 

eae14:
CPI r17, 0b00000110
BREQ DEC_REG_WEEK_ONa
jmp eae15
DEC_REG_WEEK_ONa: JMP DEC_REG_WEEK_ON  ; Tive que fazer esse "ajuste", pq o BREQ tem limitação de tamanho de pulo. 

eae15:
CPI r17, 0b00000111
BREQ DEC_REG_HOUR_OFFa
jmp eae16
DEC_REG_HOUR_OFFa : JMP DEC_REG_HOUR_OFF  ; Tive que fazer esse "ajuste", pq o BREQ tem limitação de tamanho de pulo. 

eae16:
CPI r17, 0b00001000
BREQ DEC_REG_MIN_OFFa
jmp eae17
DEC_REG_MIN_OFFa: JMP DEC_REG_MIN_OFF  ; Tive que fazer esse "ajuste", pq o BREQ tem limitação de tamanho de pulo. 

eae17:
CPI r17, 0b00001001
BREQ DEC_REG_WEEK_OFFa
DEC_REG_WEEK_OFFa: JMP DEC_REG_WEEK_OFF  ; Tive que fazer esse "ajuste", pq o BREQ tem limitação de tamanho de pulo. 



;-------------LABELS DE INCREMENTO DOS REGISTRADORES-------------------------;
;PS.: ANTES DE INCREMENTAR, CHECA SE CHEGOU AO LIMITE SUPERIOR OU INFERIOR. CASO SIM, FAZ A ALTERAÇÃO NECESSÁRIA

;Os registradores estão em formato BCD
;----Incrementa a hora do relogio e volta ----;
INC_REG_HOUR_R:
   CPI r19, 0b0010_0011 ; COMPARA A HORA COM 23
   BREQ AUX_INC_HORA_R; Se a hora era 23, vai pra 0.

   cpi R28, 9; R28 é a unidade di R19 
   breq teste_inc_hora_R

   inc r19
   JMP TIMER_H


teste_inc_hora_R:
   cpi R19, 9
   breq inc2
   ldi R19, 0b0010_0000
   rjmp TIMER_H
   
inc2:
   ldi R19, 0b0001_0000
   rjmp TIMER_H
   

AUX_INC_HORA_R:
LDI r19, 0b00000000 ; Se a hora era 23, vai pra 0.
JMP TIMER_H



;----Incrementa o minuto do relogio e volta ----;
INC_REG_MIN_R:

CPI r20, 0b0101_1001 ; COMPARA O MINUTO COM 59
BREQ AUX_INC_MIN_R ; Se o minuto era 59, vai pra 0

CPI r28, 9 ; r28 unidade dos minutos também
breq test_inc_minuto_R

inc r20
JMP TIMER_M

test_inc_minuto_R:
	cpi r20, 0b0000_1001 ;vê se é 9
	breq inc_min_1
	cpi r20, 0b0001_1001 ;vê se é 19
	breq inc_min_2
	cpi r20, 0b0010_1001 ;vê se é 29
	breq inc_min_3
	cpi r20, 0b0011_1001 ;vê se é 39
	breq inc_min_4
	LDI r20, 0b0101_0000 ;se não for nenhum dos outros, é pq é 49, entao vai pra 50
	jmp TIMER_M

inc_min_1:
	LDI r20, 0b0001_0000 ;vira 10
	jmp TIMER_M

inc_min_2:
	LDI r20, 0b0010_0000 ;vira 20
	jmp TIMER_M

inc_min_3:
	LDI r20, 0b0011_0000 ;vira 30
	jmp TIMER_M

inc_min_4:
	LDI r20, 0b0100_0000 ;vira 40
	jmp TIMER_M

	

AUX_INC_MIN_R:
LDI r20, 0b00000000 ; Se o minuto era 59, vai pra 0.
JMP TIMER_M

;----Incrementa o dia do relogio e volta ----;
INC_REG_WEEK_R:
CPI r21, 0b00000111 ; COMPARA O DIA COM 7
BREQ AUX_INC_WEEK_R ; Se o dia era 7, vai pra 1
inc r21
JMP WEEK

AUX_INC_WEEK_R:
LDI r21, 0b00000001 ; Se o dia era 7, vai pra 1
JMP WEEK


;----Incrementa a hora inicial do agendamento e volta ----;
INC_REG_HOUR_ON:
 CPI r22, 0b0010_0011 ; COMPARA A HORA COM 23
   BREQ AUX_INC_HORA_ON; Se a hora era 23, vai pra 0.

   cpi R28, 9; R28 é a unidade di R19 
   breq teste_inc_hora_ON

   inc r22
   JMP ON_H


teste_inc_hora_ON:
   cpi R22, 9
   breq inchon2
   ldi R22, 0b0010_0000
   rjmp ON_H
   
inchon2:
   ldi R22, 0b0001_0000
   rjmp ON_H
   

AUX_INC_HORA_ON:
LDI r22, 0b00000000 ; Se a hora era 23, vai pra 0.
JMP ON_H


;----Incrementa o minuto inicial do agendamento e volta ----;
INC_REG_MIN_ON:

CPI r23, 0b0101_1001 ; COMPARA O MINUTO COM 59
BREQ AUX_INC_MIN_ON ; Se o minuto era 59, vai pra 0

CPI r28, 9 ; r28 unidade dos minutos também
breq test_inc_minuto_ON

inc r23
JMP ON_M

test_inc_minuto_ON:
	cpi r23, 0b0000_1001 ;vê se é 9
	breq inc_min_1on
	cpi r23, 0b0001_1001 ;vê se é 19
	breq inc_min_2on
	cpi r23, 0b0010_1001 ;vê se é 29
	breq inc_min_3on
	cpi r23, 0b0011_1001 ;vê se é 39
	breq inc_min_4on
	LDI r23, 0b0101_0000 ;se não for nenhum dos outros, é pq é 49, entao vai pra 50
	jmp ON_M

inc_min_1on:
	LDI r23, 0b0001_0000 ;vira 10
	jmp ON_M

inc_min_2on:
	LDI r23, 0b0010_0000 ;vira 20
	jmp ON_M

inc_min_3on:
	LDI r23, 0b0011_0000 ;vira 30
	jmp ON_M

inc_min_4on:
	LDI r23, 0b0100_0000 ;vira 40
	jmp ON_M

	

AUX_INC_MIN_ON:
LDI r23, 0b00000000 ; Se o minuto era 59, vai pra 0.
JMP ON_M


;----Incrementa o dia inical do agendamento e volta ----;
INC_REG_WEEK_ON:
CPI r24, 0b00000111 ; COMPARA O DIA COM 7
BREQ AUX_INC_WEEK_ON ; Se o dia era 7, vai pra 1
inc r24
JMP WEEK_ON

AUX_INC_WEEK_ON:
LDI r24, 0b00000001 ; Se o dia era 7, vai pra 1
JMP WEEK_ON


;----Incrementa a hora final do agendamento e volta ----;
INC_REG_HOUR_OFF:

CPI r25, 0b0010_0011 ; COMPARA A HORA COM 23
   BREQ AUX_INC_HORA_OFF; Se a hora era 23, vai pra 0.

   cpi R28, 9; R28 é a unidade di R19 
   breq teste_inc_hora_OFF

   inc r25
   JMP OFF_H


teste_inc_hora_OFF:
   cpi R25, 9
   breq inchoff2
   ldi R25, 0b0010_0000
   rjmp OFF_H
   
inchoff2:
   ldi R25, 0b0001_0000
   rjmp OFF_H
   

AUX_INC_HORA_OFF:
LDI r25, 0b00000000 ; Se a hora era 23, vai pra 0.
JMP OFF_H


;----Incrementa o minuto final do agendamento e volta ----;
INC_REG_MIN_OFF:

CPI r26, 0b0101_1001 ; COMPARA O MINUTO COM 59
BREQ AUX_INC_MIN_OFF ; Se o minuto era 59, vai pra 0

CPI r28, 9 ; r28 unidade dos minutos também
breq test_inc_minuto_OFF

inc r26
JMP OFF_M

test_inc_minuto_OFF:
	cpi r26, 0b0000_1001 ;vê se é 9
	breq inc_min_1off
	cpi r26, 0b0001_1001 ;vê se é 19
	breq inc_min_2off
	cpi r26, 0b0010_1001 ;vê se é 29
	breq inc_min_3off
	cpi r26, 0b0011_1001 ;vê se é 39
	breq inc_min_4off
	LDI r26, 0b0101_0000 ;se não for nenhum dos outros, é pq é 49, entao vai pra 50
	jmp OFF_M

inc_min_1off:
	LDI r26, 0b0001_0000 ;vira 10
	jmp OFF_M

inc_min_2off:
	LDI r26, 0b0010_0000 ;vira 20
	jmp OFF_M

inc_min_3off:
	LDI r26, 0b0011_0000 ;vira 30
	jmp OFF_M

inc_min_4off:
	LDI r26, 0b0100_0000 ;vira 40
	jmp OFF_M

	

AUX_INC_MIN_OFF:
LDI r26, 0b00000000 ; Se o minuto era 59, vai pra 0.
JMP OFF_M


;----Incrementa o dia final do agendamento e volta ----;
INC_REG_WEEK_OFF:
CPI r27, 0b00000111 ; COMPARA O DIA COM 7
BREQ AUX_INC_WEEK_OFF ; Se o dia era 7, vai pra 1
inc r27
JMP WEEK_OFF

AUX_INC_WEEK_OFF:
LDI r27, 0b00000001 ; Se o dia era 7, vai pra 1
JMP WEEK_OFF



;-------------LABELS DE DECREMENTO DOS REGISTRADORES-------------------------;
;PS.: ANTES DE DECREMENTAR, CHECA SE CHEGOU AO LIMITE SUPERIOR OU INFERIOR. CASO SIM, FAZ A ALTERAÇÃO NECESSÁRIA

;----Decrementa a hora do relogio e volta ----;
DEC_REG_HOUR_R:
   CPI r19, 0b00000000 ; COMPARA A HORA COM 0
   BREQ AUX_DEC_HORA_R; Se a hora era 0, vai pra 23.

   cpi R28, 0; R28 é a unidade di R19 
   breq teste_dec_hora_R

   dec r19
   JMP TIMER_H
   
teste_dec_hora_R:
   cpi R29, 1
   breq dec2
   ldi R19, 0b0001_1001
   rjmp TIMER_H
   
dec2:
   ldi R19, 0b0000_1001
   rjmp TIMER_H

AUX_DEC_HORA_R:
LDI r19, 0b0010_0011; se a hora era 0, vai pra 23.
JMP TIMER_H


;----Decrementa o minuto do relogio e volta ----;
DEC_REG_MIN_R:

CPI r20, 0b0000_0000 ; COMPARA O MINUTO COM 0
BREQ AUX_DEC_MIN_R ; Se o minuto era 0, vai pra 59

CPI r28, 0 ; r28 unidade dos minutos também
breq test_dec_minuto_R

dec r20
JMP TIMER_M

test_dec_minuto_R:
	cpi r20, 0b0001_0000 ;vê se é 10
	breq dec_min_1
	cpi r20, 0b0010_0000 ;vê se é 20
	breq dec_min_2
	cpi r20, 0b0011_0000 ;vê se é 30
	breq dec_min_3
	cpi r20, 0b0100_0000 ;vê se é 40
	breq dec_min_4
	LDI r20, 0b0100_1001 ;se não for nenhum dos outros, é pq é 50, entao vai pra 49
	jmp TIMER_M

dec_min_1:
	LDI r20, 0b0000_1001 ;vira 9
	jmp TIMER_M

dec_min_2:
	LDI r20, 0b0001_1001 ;vira 19
	jmp TIMER_M

dec_min_3:
	LDI r20, 0b0010_1001 ;vira 29
	jmp TIMER_M

dec_min_4:
	LDI r20, 0b0011_1001 ;vira 39
	jmp TIMER_M

	

AUX_DEC_MIN_R:
LDI r20, 0b0101_1001 ; Se o minuto era 0, vai pra 59.
JMP TIMER_M

;----Decrementa o dia do relogio e volta ----;
DEC_REG_WEEK_R:
CPI r21, 0b00000001 ; COMPARA O DIA COM 1
BREQ AUX_DEC_WEEK_R ; Se o dia era 1, vai pra 7
DEC r21
JMP WEEK

AUX_DEC_WEEK_R:
LDI r21, 0b00000111 ; Se o dia era 1, vai pra 7
JMP WEEK


;----Decrementa a hora inicial do agendamento e volta ----;
DEC_REG_HOUR_ON:

   CPI r22, 0b00000000 ; COMPARA A HORA COM 0
   BREQ AUX_DEC_HORA_ON; Se a hora era 0, vai pra 23.

   cpi R28, 0; R28 é a unidade di R19 
   breq teste_dec_hora_ON

   dec r22
   JMP ON_H
   
teste_dec_hora_ON:
   cpi R29, 1
   breq dec2on
   ldi R22, 0b0001_1001
   rjmp ON_H
   
dec2on:
   ldi R22, 0b0000_1001
   rjmp ON_H

AUX_DEC_HORA_ON:
LDI r22, 0b0010_0011; se a hora era 0, vai pra 23.
JMP ON_H


;----Decrementa o minuto inicial do agendamento e volta ----;
DEC_REG_MIN_ON:

CPI r23, 0b0000_0000 ; COMPARA O MINUTO COM 0
BREQ AUX_DEC_MIN_ON ; Se o minuto era 0, vai pra 59

CPI r28, 0 ; r28 unidade dos minutos também
breq test_dec_minuto_ON

dec r23
JMP ON_M

test_dec_minuto_ON:
	cpi r23, 0b0001_0000 ;vê se é 10
	breq dec_min_1on
	cpi r23, 0b0010_0000 ;vê se é 20
	breq dec_min_2on
	cpi r23, 0b0011_0000 ;vê se é 30
	breq dec_min_3on
	cpi r23, 0b0100_0000 ;vê se é 40
	breq dec_min_4on
	LDI r23, 0b0100_1001 ;se não for nenhum dos outros, é pq é 50, entao vai pra 49
	jmp ON_M

dec_min_1on:
	LDI r23, 0b0000_1001 ;vira 9
	jmp ON_M

dec_min_2on:
	LDI r23, 0b0001_1001 ;vira 19
	jmp ON_M

dec_min_3on:
	LDI r23, 0b0010_1001 ;vira 29
	jmp ON_M

dec_min_4on:
	LDI r23, 0b0011_1001 ;vira 39
	jmp ON_M

	

AUX_DEC_MIN_ON:
LDI r23, 0b0101_1001 ; Se o minuto era 0, vai pra 59.
JMP ON_M


;----Decrementa o dia inical do agendamento e volta ----;
DEC_REG_WEEK_ON:
CPI r24, 0b00000001 ; COMPARA O DIA COM 1
BREQ AUX_DEC_WEEK_ON ; Se o dia era 1, vai pra 7
DEC r24
JMP WEEK_ON

AUX_DEC_WEEK_ON:
LDI r24, 0b00000111 ; Se o dia era 1, vai pra 7
JMP WEEK_ON


;----Decrementa a hora final do agendamento e volta ----;
DEC_REG_HOUR_OFF:

CPI r25, 0b00000000 ; COMPARA A HORA COM 0
   BREQ AUX_DEC_HORA_OFF; Se a hora era 0, vai pra 23.

   cpi R28, 0; R28 é a unidade di R19 
   breq teste_dec_hora_OFF

   dec r25
   JMP OFF_H
   
teste_dec_hora_OFF:
   cpi R29, 1
   breq dec2off
   ldi R25, 0b0001_1001
   rjmp OFF_H
   
dec2off:
   ldi R25, 0b0000_1001
   rjmp OFF_H

AUX_DEC_HORA_OFF:
LDI r25, 0b0010_0011; se a hora era 0, vai pra 23.
JMP OFF_H

;----Decrementa o minuto final do agendamento e volta ----;
DEC_REG_MIN_OFF:

CPI r26, 0b0000_0000 ; COMPARA O MINUTO COM 0
BREQ AUX_DEC_MIN_OFF ; Se o minuto era 0, vai pra 59

CPI r28, 0 ; r28 unidade dos minutos também
breq test_dec_minuto_OFF

dec r26
JMP OFF_M

test_dec_minuto_OFF:
	cpi r26, 0b0001_0000 ;vê se é 10
	breq dec_min_1off
	cpi r26, 0b0010_0000 ;vê se é 20
	breq dec_min_2off
	cpi r26, 0b0011_0000 ;vê se é 30
	breq dec_min_3off
	cpi r26, 0b0100_0000 ;vê se é 40
	breq dec_min_4off
	LDI r26, 0b0100_1001 ;se não for nenhum dos outros, é pq é 50, entao vai pra 49
	jmp OFF_M

dec_min_1off:
	LDI r26, 0b0000_1001 ;vira 9
	jmp OFF_M

dec_min_2off:
	LDI r26, 0b0001_1001 ;vira 19
	jmp OFF_M

dec_min_3off:
	LDI r26, 0b0010_1001 ;vira 29
	jmp OFF_M

dec_min_4off:
	LDI r26, 0b0011_1001 ;vira 39
	jmp OFF_M

	

AUX_DEC_MIN_OFF:
LDI r26, 0b0101_1001 ; Se o minuto era 0, vai pra 59.
JMP OFF_M


;----Decrementa o dia final do agendamento e volta ----;
DEC_REG_WEEK_OFF:
CPI r27, 0b00000001 ; COMPARA O DIA COM 1
BREQ AUX_DEC_WEEK_OFF ; Se o dia era 1, vai pra 7
DEC r27
JMP WEEK_OFF

AUX_DEC_WEEK_OFF:
LDI r27, 0b00000111 ; Se o dia era 1, vai pra 7
JMP WEEK_OFF


;;;;--------------------------------------------------------;;;----------------------------------------------------------------------------------------------//;;;----------------



RTC_minutos:
   ldi R16, 0x83 ;carrega o endereço de leitura dos minutos
   cbi PORTB, SS1
   out SPDR, R16 ;enviar o endereço
   rcall Wait_minutos
   rcall dezena_minutos
   rcall display_minutos1
   rjmp RTC_horas

 display_minutos1:
   ldi R16, 0x01
   rcall runCMD_minutos1

display_minutos2:
  ldi R16, 0x04
  rcall runCMD_minutos2
  ret
   
RTC_horas:
   cbi PORTB, SS1
   ldi R16, 0x85 ;carrega o endereço de leitura dos minutos
   out SPDR, R16 ;enviar o endereço
   rcall Wait_horas
   rcall dezena_horas
   rcall display_horas1
   rjmp RTC_dias
   
display_horas1:
   ldi R16, 0x03
   rcall runCMD_horas1
   
display_horas2:
   ldi R16, 0x02
   rcall runCMD_horas2
   ret
   
RTC_dias:
   ldi R16, 0x8B ;carrega o endereço de leitura dos minutos
   cbi PORTB, SS1
   out SPDR, R16 ;enviar o endereço
   rcall Wait_dias
   
leds1:
   mov R18, R21
   andi R18, 1 ;operação AND com 0000 0001
   cpi R18, 1
   breq leds_dias1
 
leds2:
   mov R18, R21
   andi R18, 2 ;operação AND com 0000 0010
   cpi R18, 2
   breq leds_dias2
   
leds3:
   mov R18, R21
   andi R18, 4 ;operação AND com 0000 0100
   cpi R18, 4
   breq leds_dias3
   rjmp volta1
   
leds_dias1:
   sbi PORTC, PC0
   rjmp leds2
leds_dias2:
   sbi PORTC, PC1
   rjmp leds3
leds_dias3:
   sbi PORTC, PC2
   rjmp volta1
  
Wait_dias:
   in R30, SPSR
   sbrs R30, SPIF ;espera a flag de fim de transferência ativar
   RJMP Wait_dias
   clr R16
   out SPDR, R16 ;enviar o endereço de novo com um registrador vazio qualquer
   rcall Wait_dias2
   
   in R21, SPDR ;ler os dados recebidos no registrador 29  
   ret
   
Wait_dias2:
   in R30, SPSR
   sbrs R30, SPIF ;espera a flag de fim de transferência ativar
   RJMP Wait_dias2
   sbi PORTB, SS1 ;desabilita o slave device
   ret
   
Wait_minutos:
   in R30, SPSR
   sbrs R30, SPIF ;espera a flag de fim de transferência ativar
   RJMP Wait_minutos
   clr R16
   out SPDR, R16 ;enviar o endereço de novo com um registrador vazio qualquer
   rcall Wait_minutos2
   
   in R20, SPDR ;ler os dados recebidos no registrador 29  
   ret
   
Wait_minutos2:
   in R30, SPSR
   sbrs R30, SPIF ;espera a flag de fim de transferência ativar
   RJMP Wait_minutos2
   sbi PORTB, SS1 ;desabilita o slave device
   ret
   
Wait_horas:
   in R30, SPSR
   sbrs R30, SPIF ;espera a flag de fim de transferência ativar
   RJMP Wait_horas
   clr R16
   out SPDR, R16 ;enviar o endereço
   rcall Wait_horas2
   
   in R19, SPDR ;ler os dados recebidos no registrador 29
   ret

Wait_horas2:
   in R30, SPSR
   sbrs R30, SPIF ;espera a flag de fim de transferência ativar
   RJMP Wait_horas2
   sbi PORTB, SS1 ;desabilita o slave device
   ret



   ;Transmissão para o CI MAX7221
;R30 recebe o endereço
;R29 recebe os dados
runCMD:
   cbi PORTB, SS2 ; começa a transmissão para o display driver
   out SPDR, R16
   
wait1:
   in R30, SPSR
   sbrs R30, SPIF ;pula para próxima instrução se SPIF for 1
   rjmp wait1
   
   out SPDR, R29
   
wait2:
   in R30, SPSR
   sbrs R30, SPIF 
   rjmp wait2
   
   sbi PORTB, SS2; termina a transmissão
   ret
;Fim da transmissão

;;;;;;;;;;;;;;;;;;MINUTOS 1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
runCMD_minutos1:
   cbi PORTB, SS2 ; começa a transmissão para o display driver
   out SPDR, R16
   
wait1_minutos1:
   in R30, SPSR
   sbrs R30, SPIF ;pula para próxima instrução se SPIF for 1
   rjmp wait1_minutos1
   
   out SPDR, R28
   
wait2_minutos1:
   in R30, SPSR
   sbrs R30, SPIF 
   rjmp wait2_minutos1
   
   sbi PORTB, SS2; termina a transmissão
   ret
   
;;;;;;;;;;;;;;;;;;MINUTOS 2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
runCMD_minutos2:
   cbi PORTB, SS2 ; começa a transmissão para o display driver
   out SPDR, R16
   
wait1_minutos2:
   in R30, SPSR
   sbrs R30, SPIF ;pula para próxima instrução se SPIF for 1
   rjmp wait1_minutos2
   
   out SPDR, R29
   
wait2_minutos2:
   in R30, SPSR
   sbrs R30, SPIF 
   rjmp wait2_minutos2
   
   sbi PORTB, SS2; termina a transmissão
   ret

;;;;;;;;;;;;;;;;;;;HORAS 1;;;;;;;;;;;;;;;;;;;;;;;   
runCMD_horas1:
   cbi PORTB, SS2 ; começa a transmissão para o display driver
   out SPDR, R16
   
wait1_horas1:
   in R30, SPSR
   sbrs R30, SPIF ;pula para próxima instrução se SPIF for 1
   rjmp wait1_horas1
   
   clr R30
   out SPDR, R28
   
wait2_horas1:
   in R30, SPSR
   sbrs R30, SPIF 
   rjmp wait2_horas1
   
   sbi PORTB, SS2; termina a transmissão
   ret

;;;;;;;;;;;;;;;;;;HORAS 2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;   
runCMD_horas2:
   cbi PORTB, SS2 ; começa a transmissão para o display driver
   out SPDR, R16
   
wait1_horas2:
   in R30, SPSR
   sbrs R30, SPIF ;pula para próxima instrução se SPIF for 1
   rjmp wait1_horas2
   
   out SPDR, R29
   
wait2_horas2:
   in R30, SPSR
   sbrs R30, SPIF 
   rjmp wait2_horas2
   
   sbi PORTB, SS2; termina a transmissão
   ret
   
dezena_minutos:
   mov R29, R20
   andi R29, 112 ; operação AND com 0111 0000
   lsr R29 ; 0011 1000
   lsr R29 ; 0001 1100
   lsr R29 ; 0000 1110
   lsr R29 ; 0000 0111
   mov R28, R20
   andi R28, 15 ; AND com 0000 1111
   ret
   
dezena_horas:
   mov R29, R19
   andi R29, 48 ; operação AND com 0011 0000
   lsr R29 ; 0001 1000
   lsr R29 ; 0000 1100
   lsr R29 ; 0000 0110
   lsr R29 ; 0000 0011
   mov R28, R19
   andi R28, 15 ; AND com 0000 1111
   ret
   
;;;;;;;;;;;;;;;;;;ESCREVE HORAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;   
envia_horas:
   in R30, SPSR
   sbrs R30, SPIF ;espera a flag de fim de transferência ativar
   RJMP envia_horas
   
   out SPDR, R19 ;enviar os dados
   rcall envia_horas2
  
   ret

envia_horas2:
   in R30, SPSR
   sbrs R30, SPIF ;espera a flag de fim de transferência ativar
   RJMP envia_horas2
   sbi PORTB, SS1 ;desabilita o slave device
   ret
   
apaga_display_minutos:
   ldi R16, 0x01
   rcall apaga1_minutos
   
apaga_display_minutos2:
   ldi R16, 0x04
   rcall apaga2_minutos
   ret
    
apaga1_minutos:
   cbi PORTB, SS2 ; começa a transmissão para o display driver
   out SPDR, R16
   
apaga1_minutos1:
   in R30, SPSR
   sbrs R30, SPIF ;pula para próxima instrução se SPIF for 1
   rjmp apaga1_minutos1
   
   ldi R16, 0b01111111
   out SPDR, R16
   
apaga1_minutos2:
   in R30, SPSR
   sbrs R30, SPIF 
   rjmp apaga1_minutos2
   
   sbi PORTB, SS2; termina a transmissão
   ret
   
apaga2_minutos:
   cbi PORTB, SS2 ; começa a transmissão para o display driver
   out SPDR, R16
   
apaga2_minutos1:
   in R30, SPSR
   sbrs R30, SPIF ;pula para próxima instrução se SPIF for 1
   rjmp apaga2_minutos1
   
   ldi R16, 0b01111111
   out SPDR, R16
   
apaga2_minutos2:
   in R30, SPSR
   sbrs R30, SPIF 
   rjmp apaga2_minutos2
   
   sbi PORTB, SS2; termina a transmissão
   ret
;;;;;;;;;;;;;;;;;ACABA ESCREVE HORAS;;;;;;;;;;;;;;;;;;;;;;;;



;;;;;;;;;;;;;;;;ESCREVE MINUTOS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
envia_minutos:
   in R30, SPSR
   sbrs R30, SPIF ;espera a flag de fim de transferência ativar
   RJMP envia_minutos
   
   out SPDR, R20 ;enviar os dados
   rcall envia_minutos2
  
   ret

envia_minutos2:
   in R30, SPSR
   sbrs R30, SPIF ;espera a flag de fim de transferência ativar
   RJMP envia_minutos2
   sbi PORTB, SS1 ;desabilita o slave device
   ret
   
apaga_display_horas:
   ldi R16, 0x03
   rcall apaga1_horas
   
apaga_display_horas2:
   ldi R16, 0x02
   rcall apaga2_horas
   ret
    
apaga1_horas:
   cbi PORTB, SS2 ; começa a transmissão para o display driver
   out SPDR, R16
   
apaga1_horas1:
   in R30, SPSR
   sbrs R30, SPIF ;pula para próxima instrução se SPIF for 1
   rjmp apaga1_horas1
   
   ldi R16, 0b01111010
   out SPDR, R16
   
apaga1_horas2:
   in R30, SPSR
   sbrs R30, SPIF 
   rjmp apaga1_horas2
   
   sbi PORTB, SS2; termina a transmissão
   ret
   
apaga2_horas:
   cbi PORTB, SS2 ; começa a transmissão para o display driver
   out SPDR, R16
   
apaga2_horas1:
   in R30, SPSR
   sbrs R30, SPIF ;pula para próxima instrução se SPIF for 1
   rjmp apaga2_horas1
   
   ldi R16, 0b01111010
   out SPDR, R16
   
apaga2_horas2:
   in R30, SPSR
   sbrs R30, SPIF 
   rjmp apaga2_horas2
   
   sbi PORTB, SS2; termina a transmissão
   ret
;;;;;;;;;;;;;;;;;;;;;FIM ESCREVE MINUTOS;;;;;;;;;;;;;;;;



;;;;;;;;;;;;;;DIAS;;;;;;;;;;;;;;;
envia_dias:
   in R30, SPSR
   sbrs R30, SPIF ;espera a flag de fim de transferência ativar
   RJMP envia_dias
   
   out SPDR, R21 ;enviar os dados
   rcall envia_dias2
  
   ret

envia_dias2:
   in R30, SPSR
   sbrs R30, SPIF ;espera a flag de fim de transferência ativar
   RJMP envia_dias2
   sbi PORTB, SS1 ;desabilita o slave device
   ret